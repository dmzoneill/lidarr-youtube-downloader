name: CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
permissions: write-all

jobs:
  run-lint:
    runs-on: ubuntu-latest
    name: Run linter
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_MARKDOWN: false
          VALIDATE_PYTHON_MYPY: false
          VALIDATE_PYTHON_FLAKE8: false       
          VALIDATE_GITHUB_ACTIONS: false
          DEFAULT_BRANCH: "main"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  bump-version:
    if: >-
      github.event_name == 'push' || 
      github.event.pull_request.merged == true
    name: Bump Version
    needs: run-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Filter
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'lidarr_youtube_downloader/**'
              - 'setup.py'
              - 'pyproject.toml'
              - 'PKG-INFO'
              
      - name: Bump       
        run: |-
          version=$(grep '^Version:' PKG-INFO | sed 's/Version: //')
          next=$(echo $version | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.)
          sed "s/$version/$next/" -i PKG-INFO
          sed "s/$version/$next/" -i pyproject.toml
          sed "s/$version/$next/" -i setup.py
  
      - name: Push changes
        if: steps.changes.outputs.src == 'true'
        uses: mikeal/publish-to-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: 'main' #optional defaults to master

  build-lidarr-youtube-downloader:
    if: >-
      github.event_name == 'push' || 
      github.event.pull_request.merged == true
    name: Build downloader
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
     
      - name: Build
        run: |-
          pip3 install trove-classifiers ptyprocess msgpack lockfile distlib tomlkit tomli shellingham rapidfuzz pyrsistent poetry-core platformdirs pkginfo pexpect packaging jeepney jaraco.classes filelock dulwich crashtest cachecontrol virtualenv SecretStorage jsonschema cleo keyring poetry-plugin-export poetry bumpver
          python3 -m pip install --upgrade build
          python3 -m pip install --upgrade twine
          python3 -m build
    
      - name: Upload step
        run: |-
          # shellcheck disable=SC2035
          printf "[pypi]\n  username = __token__\n  password = ${{ secrets.PYPI_TOKEN }}" > ~/.pypirc
          # shellcheck disable=SC2035
          python3 -m twine upload --verbose --non-interactive --config-file ~/.pypirc --repository pypi dist/*

      - name: Rebuild profile
        if: always()
        run: |-
          curl -H 'Accept: application/vnd.github+json' -H 'Authorization: token ${{ secrets.PROFILE_HOOK }}' --request POST --data '{"event_type": "cicd-hook"}' https://api.github.com/repos/dmzoneill/dmzoneill/dispatches
